// Copyright 2022 Eidos-Montreal / Eidos-Sherbrooke

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http ://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "/Engine/Private/Common.ush"

Texture2D InputTexture;
SamplerState InputSampler;
Texture2D DepthTexture;

void MainPS(float4 SvPosition : SV_POSITION
			, out float4 OutColor : SV_Target0
#if USE_DEPTH
			, out float OutDepth : SV_Depth
#endif
			)
{
	float2 BufferUV = SvPosition.xy * View.BufferSizeAndInvSize.zw;
	float4 RadianceAndThroughput = InputTexture.SampleLevel(InputSampler, BufferUV, 0);

#if DEBUG_DISPLAY == 1 // RADIANCE_ONLY
	OutColor = float4(RadianceAndThroughput.rgb, RadianceAndThroughput.a);
#elif DEBUG_DISPLAY == 2 // THROUGHPUT_ONLY
	OutColor = float4(RadianceAndThroughput.aaa, RadianceAndThroughput.a);
#else
	OutColor = float4(RadianceAndThroughput.rgb, RadianceAndThroughput.a);
#endif

#if USE_DEPTH
	OutDepth = DepthTexture.Load(int3(SvPosition.xy, 0)).x;
#endif
}